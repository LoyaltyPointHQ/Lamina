# Default values for lamina.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Platform detection - can be overridden
platform:
  # Auto-detect OpenShift (set to "auto", "kubernetes", or "openshift")
  type: auto

# Number of replicas
replicaCount: 1

# Image configuration
image:
  repository: ghcr.io/loyaltypointhq/lamina
  pullPolicy: IfNotPresent

# ImageStream configuration (OpenShift only)
imageStream:
  enabled: auto  # auto, true, or false
  namespace: ""  # Defaults to release namespace
  name: lamina

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod annotations and labels
podAnnotations: {}
podLabels: {}

# Security context
podSecurityContext:
  runAsNonRoot: true
    
persistentVolume:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteMany
  size: 10Gi
  existingClaim: ""
  
metadataPersistentVolume:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteMany
  size: 10Gi
  existingClaim: ""

sameVolumeForDataAndMeta: true

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  annotations: {}

# Ingress configuration (Kubernetes)
ingress:
  enabled: false  # auto, true, or false (auto = true on k8s, false on openshift)
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: lamina.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: lamina-tls
  #    hosts:
  #      - lamina.local

# Route configuration (OpenShift)
route:
  enabled: false  # auto, true, or false (auto = true on openshift, false on k8s)
  host: ""  # Leave empty to auto-generate
  path: /
  wildcardPolicy: None
  tls:
    enabled: true
    termination: edge  # edge, passthrough, or reencrypt
    insecureEdgeTerminationPolicy: Redirect  # Allow, Redirect, or None
    certificate: ""
    key: ""
    caCertificate: ""
    destinationCACertificate: ""

# Resources
resources:
  limits:
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Application configuration
config: {}

# Liveness and readiness probes
livenessProbe:
  enabled: true
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  enabled: true
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Environment variables
env: []
  # - name: ASPNETCORE_ENVIRONMENT
  #   value: Production

# Extra volume mounts
volumeMounts: []

# Extra volumes
volumes: []