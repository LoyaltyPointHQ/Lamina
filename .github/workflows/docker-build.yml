name: Build and Push Docker Image & Helm Chart

on:
  push:
    branches:
      - master
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Lamina/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Install Helm
        if: github.event_name != 'pull_request'
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Package Helm chart
        if: github.event_name != 'pull_request'
        run: |
            # Update Chart.yaml with the correct app version
            if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}  # Remove 'v' prefix if present
            sed -i "s/^appVersion:.*/appVersion: \"$VERSION\"/" chart/Chart.yaml
            sed -i "s/^version:.*/version: $VERSION/" chart/Chart.yaml
          else
            # For branches, use the commit SHA
            sed -i "s/^appVersion:.*/appVersion: \"${{ github.sha }}\"/" chart/Chart.yaml
          fi

          # Package the chart
          helm package chart/

      - name: Push Helm chart to GHCR
        if: github.event_name != 'pull_request'
        run: |
          # Login to GHCR with Helm
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin

          # Push the chart
          CHART_FILE=$(ls lamina-chart-*.tgz)
          helm push $CHART_FILE oci://${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/lamina-chart